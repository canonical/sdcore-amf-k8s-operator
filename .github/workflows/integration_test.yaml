# Copyright 2024 Canonical Ltd.
# See LICENSE file for licensing details.

name: Integration test

on:
  workflow_call:
    inputs:
      branch-name:
        description: Name of the branch to checkout
        required: false
        type: string
        default: ${{ github.ref }}
      enable-metallb:
        description: Enable MetalLB
        required: false
        type: boolean
        default: false
      metallb-range:
        description: MetalLB range
        required: false
        type: string
        default: "10.0.0.2-10.0.0.10"

jobs:
  integration-test:
    runs-on: [self-hosted, linux, X64, xlarge, jammy]
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          ref: ${{ inputs.branch-name }}

      - name: Fetch Charm Under Test
        uses: actions/download-artifact@v4
        with:
          name: built-charm
          path: built/

      - name: Get Charm Under Test Path
        id: charm-path
        run: echo "charm_path=$(find built/ -name '*.charm' -type f -print)" >> $GITHUB_OUTPUT

      - name: Setup Canonical K8S
        id: canonical-k8s
        run: |
          sudo snap install k8s --classic --channel=1.33-classic/stable
          cat << EOF | sudo k8s bootstrap --file -
          containerd-base-dir: /opt/containerd
          EOF
          sudo k8s enable network local-storage dns
          sudo k8s status --wait-ready --timeout 5m
          mkdir -p ~/.kube
          sudo k8s config > ~/.kube/config
          echo "kubeconfig=$(sudo k8s config | base64 -w 0)" >> $GITHUB_OUTPUT

      - name: Setup operator environment
        uses: charmed-kubernetes/actions-operator@main
        with:
          credentials-yaml: ${{ steps.canonical-k8s.outputs.kubeconfig }}
          juju-channel: 3.6/stable
          provider: k8s

      - name: Install UV, Tox and Jhack
        run: |
          pipx uninstall tox
          sudo snap install astral-uv --classic
          sudo snap install jhack
          sudo snap connect jhack:dot-local-share-juju snapd
          uv tool install tox --with tox-uv --force

      - name: Enable MetalLB
        if: ${{ inputs.enable-metallb == true }}
        run: |
          sudo k8s enable load-balancer
          sudo k8s set load-balancer.cidrs="${{ inputs.metallb-range }}" load-balancer.enabled=true load-balancer.l2-mode=true

      - name: Run integration tests
        run: |
          tox -e integration -- \
            --charm_path="${{ steps.charm-path.outputs.charm_path }}" \

      - name: Archive charmcraft logs
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: charmcraft-logs
          path: /home/runner/.local/state/charmcraft/log/*.log

      - name: Archive juju crashdump
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: juju-crashdump
          path: juju-crashdump-*.tar.xz